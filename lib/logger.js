// Generated by CoffeeScript 1.10.0
(function() {
  var Chain, details, getStdin, lowestIssueCount, submitToAirtable, updateGithubIssue;

  Chain = require('./faas-chain');

  getStdin = require('get-stdin');

  details = null;

  submitToAirtable = new Chain('http://45.63.7.154:8080/function/fs_submitentry');

  lowestIssueCount = new Chain('http://45.63.7.154:8080/function/fs_lowestissuecount');

  updateGithubIssue = new Chain('http://45.63.7.154:8080/fs_updategithubissue');

  getStdin().then(function(incomingPayload) {
    var airtableEntry;
    details.githubIssue = incomingPayload.issue.number;
    details.githubRepo = incomingPayload.repository.issues_url;
    return airtableEntry = {
      'Issue': incomingPayload.issue.number,
      'Title': incomingPayload.issue.title,
      'Labels': incomingPayload.issue.labels[0].name,
      'Repo': incomingPayload.repository.full_name,
      'Priority': 'High',
      'Status': 'Backlog',
      'Bug Source': 'Github Issue',
      'Description': incomingPayload.issue.body,
      'Notified Users?': true
    };
  }).then(function(entry) {
    return Promise.all([submitToAirtable.post(entry), lowestIssueCount.post()]);
  }).then(function(recordID, leastIssues) {
    var dataToUpdate;
    details.githubUserName = leastIssues.githubUserName;
    dataToUpdate = {
      record: recordID,
      assignTo: leastIssues.id
    };
    return assignRecordTo.post(dataToUpdate);
  }).then(function(assignee) {
    var data;
    data = {
      githubIssue: details.githubIssue
    };
    return updateGithubIssue.post(data);
  });

}).call(this);
